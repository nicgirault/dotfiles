{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":49,"width":1920,"height":1031,"maximized":false},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/home/nico/projects/bnp-serious-game-api"],"buffers":[{"text":"server:\n  image: python:3\n  working_dir: /mnt\n  volumes:\n    - .:/mnt\n  links:\n   - db\n  ports:\n    - 5021:5021\n  environment:\n    PYTHONPATH: $PYTHONPATH:src:utils/src\n    PYTHONUSERBASE: /mnt/vendor\n  env_file: .env\n  command: python src/server.py\n\nvendors:\n  image: python:3\n  working_dir: /mnt\n  volumes:\n    - .:/mnt\n  environment:\n    PYTHONUSERBASE: /mnt/vendor\n  env_file: .env\n  command: pip install -r requirements.txt --user --upgrade\n\ndb:\n  image: postgres:9.4\n  volumes:\n    - shared/data:/var/lib/postgresql/data\n\ntest:\n  image: python:3\n  working_dir: /mnt\n  links:\n   - db\n  ports:\n    - 5021:5021\n  volumes:\n    - .:/mnt\n  environment:\n    PYTHONPATH: $PYTHONPATH:src:test:utils/src\n    PYTHONUSERBASE: /mnt/vendor\n  env_file: test.env\n  command: python -m unittest discover\n\ncoverage:\n  image: python:3\n  working_dir: /mnt\n  volumes:\n    - .:/mnt\n  environment:\n    PYTHONPATH: $PYTHONPATH:src:test:utils/src\n    PYTHONUSERBASE: /mnt/vendor\n    AUTHENTICATOR_URL: http://bnp-validation.theo.do/authenticator\n  command: python -m nose --with-coverage --cover-html --cover-html-dir=cover --cover-package=managers --cover-package=cron --cover-package=database --with-xunit --with-tap --tap-outdir=tap\n","markerStore":{"nextMarkerId":73,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":19,"goalScreenRange":null,"preserveFolds":true},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"31":{"range":{"start":{"row":0,"column":0},"end":{"row":25,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"32":{"range":{"start":{"row":28,"column":0},"end":{"row":28,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"67":{"range":{"start":{"row":0,"column":0},"end":{"row":25,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"68":{"range":{"start":{"row":28,"column":0},"end":{"row":28,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":18,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/nico/projects/bnp-serious-game-api/docker-compose.yml","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"eefc3acb1db62c4be2c71de8477c97acb1b66bed","deserializer":"TextBuffer","version":2},{"text":"import os\nimport tempfile\nimport json\nfrom copy import deepcopy\nimport unittest\nfrom mock import patch\n\nimport config\nfrom server import create_app\nfrom models import db, PortfolioRevision, Game, Portfolio\nfrom mocks import authenticator_mock\nfrom utils import merge_liquidation\n\n\nclass TestMergeLiquidation(unittest.TestCase):\n\n    def setUp(self):\n        app = create_app()\n        app.config['TESTING'] = True\n        self.client = app.test_client()\n\n        db.create_all()\n        game = Game('2015-01-01', '2015-01-01', '2015-01-01', 'EUR', 'DUMMY', 'DUMMY')\n        db.session.add(game)\n        db.session.commit()\n\n        portfolios= [\n            Portfolio(game.id),\n            Portfolio(game.id),\n            Portfolio(game.id),\n            Portfolio(game.id),\n        ]\n        db.session.add_all(portfolios)\n        db.session.commit()\n\n        self.revisions = [\n            PortfolioRevision({'1': 20, '2': 80}, '2015-06-01', 1000, portfolio_id=portfolios[0].id),\n            PortfolioRevision({'1': 21, '2': 79}, '2015-06-02', 1000, portfolio_id=portfolios[0].id),\n            PortfolioRevision({'1': 22, '2': 78}, '2015-06-03', 1000, portfolio_id=portfolios[0].id),\n            PortfolioRevision({'3': 50, '4': 50}, '2015-06-06', 1000, portfolio_id=portfolios[1].id),\n            PortfolioRevision({'5': 50, '4': 20, '1': 30}, '2015-06-08', 1000, portfolio_id=portfolios[2].id),\n            PortfolioRevision({'1': 100}, '2015-06-08', 1000, portfolio_id=portfolios[3].id),\n        ]\n        db.session.add_all(self.revisions)\n        db.session.commit()\n\n        self.patcher = patch('clients.authenticator.me')\n        me = self.patcher.start()\n        me.return_value = authenticator_mock.me_as_admin\n\n        self.patcher1 = patch('clients.flux.isin_to_fundshare_id')\n        isin_to_fundshare_id = self.patcher1.start()\n        def isin_to_fundshare_id_mock(*args, **kwargs):\n            return args[0].replace('LU', '')\n        isin_to_fundshare_id.side_effect = isin_to_fundshare_id_mock\n\n    def tearDown(self):\n        db.session.remove()\n        db.drop_all()\n        self.patcher.stop()\n        self.patcher1.stop()\n\n    def test_get_latest_revisions_returns_expected_revisions(self):\n        latest_revisions_ids = [\n            r.id for r in merge_liquidation.get_latest_revisions()\n        ]\n        self.assertEqual(len(latest_revisions_ids), 4)\n        self.assertTrue(self.revisions[2].id in latest_revisions_ids)\n        self.assertTrue(self.revisions[3].id in latest_revisions_ids)\n        self.assertTrue(self.revisions[4].id in latest_revisions_ids)\n        self.assertTrue(self.revisions[5].id in latest_revisions_ids)\n\n    def test_merge_affects_revisions_as_expected(self):\n        merge_liquidation.merge('LU1', 'LU2')\n\n        revision = PortfolioRevision.query.filter_by(id=self.revisions[1].id).one()\n        self.assertDictEqual(revision.composition, {'1': 21, '2': 79})\n\n        revision = PortfolioRevision.query.filter_by(id=self.revisions[2].id).one()\n        self.assertDictEqual(revision.composition, {'2': 100})\n\n        revision = PortfolioRevision.query.filter_by(id=self.revisions[3].id).one()\n        self.assertDictEqual(revision.composition, {'3': 50, '4': 50})\n\n        revision = PortfolioRevision.query.filter_by(id=self.revisions[4].id).one()\n        self.assertDictEqual(revision.composition, {'5': 50, '4': 20, '2': 30})\n\n    def test_drop_affects_revisions_as_expected(self):\n        merge_liquidation.drop('LU1')\n\n        revision = PortfolioRevision.query.filter_by(id=self.revisions[2].id).one()\n        self.assertDictEqual(revision.composition, {'2': 100})\n\n        revision = PortfolioRevision.query.filter_by(id=self.revisions[3].id).one()\n        self.assertDictEqual(revision.composition, {'3': 50, '4': 50})\n\n        revision = PortfolioRevision.query.filter_by(id=self.revisions[4].id).one()\n        self.assertDictEqual(revision.composition, {'5': 71.428571, '4': 28.571429})\n\n        revision = PortfolioRevision.query.filter_by(id=self.revisions[5].id).one()\n        self.assertDictEqual(revision.composition, {'safeFund': 100})\n","markerStore":{"nextMarkerId":2038,"markersById":{"0":{"range":{"start":{"row":22,"column":86},"end":{"row":22,"column":86}},"properties":{"type":"selection","editorId":23,"goalScreenRange":null,"autoscroll":true,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"74":{"range":{"start":{"row":43,"column":27},"end":{"row":43,"column":41}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"181":{"range":{"start":{"row":70,"column":20},"end":{"row":70,"column":68}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"326":{"range":{"start":{"row":70,"column":38},"end":{"row":70,"column":40}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"482":{"range":{"start":{"row":41,"column":37},"end":{"row":41,"column":38}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"526":{"range":{"start":{"row":54,"column":43},"end":{"row":54,"column":68}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"591":{"range":{"start":{"row":52,"column":37},"end":{"row":52,"column":53}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"730":{"range":{"start":{"row":53,"column":23},"end":{"row":53,"column":25}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"784":{"range":{"start":{"row":53,"column":34},"end":{"row":53,"column":43}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"793":{"range":{"start":{"row":53,"column":35},"end":{"row":53,"column":38}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"828":{"range":{"start":{"row":53,"column":41},"end":{"row":53,"column":42}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"883":{"range":{"start":{"row":72,"column":48},"end":{"row":72,"column":53}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"946":{"range":{"start":{"row":73,"column":32},"end":{"row":73,"column":36}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"967":{"range":{"start":{"row":73,"column":39},"end":{"row":73,"column":43}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"1038":{"range":{"start":{"row":75,"column":52},"end":{"row":75,"column":76}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"1110":{"range":{"start":{"row":76,"column":28},"end":{"row":76,"column":69}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"1400":{"range":{"start":{"row":75,"column":81},"end":{"row":75,"column":82}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"1501":{"range":{"start":{"row":74,"column":0},"end":{"row":74,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"1508":{"range":{"start":{"row":74,"column":0},"end":{"row":74,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"1998":{"range":{"start":{"row":88,"column":30},"end":{"row":88,"column":31}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"1999":{"range":{"start":{"row":88,"column":36},"end":{"row":88,"column":37}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"2032":{"range":{"start":{"row":22,"column":85},"end":{"row":22,"column":86}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"2033":{"range":{"start":{"row":22,"column":19},"end":{"row":22,"column":20}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"2036":{"range":{"start":{"row":22,"column":85},"end":{"row":22,"column":86}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"2037":{"range":{"start":{"row":22,"column":19},"end":{"row":22,"column":20}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":1496,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/nico/projects/bnp-serious-game-api/test/utils/test_merge_liquidation.py","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"108c80336a8bcc1d94602e06d7cbb1965151e886","deserializer":"TextBuffer","version":2},{"text":"from sqlalchemy import func\nfrom sqlalchemy.sql import and_\nimport decimal\nfrom decimal import Decimal\ndecimal.getcontext().prec = 20\n\nfrom copy import deepcopy\n\nfrom clients import flux\nfrom models import db, PortfolioRevision\nimport config\n\ndef get_latest_revisions():\n    \"\"\"\n    Query the latest revision (edited revisions included) for all portfolios\n    \"\"\"\n\n    subquery = db.session.query(\n        PortfolioRevision.portfolio_id,\n        func.max(PortfolioRevision.valuation_date).label('max_date')\n    ).group_by(PortfolioRevision.portfolio_id).subquery()\n\n    return db.session.query(PortfolioRevision)\\\n        .filter(and_(\n            PortfolioRevision.portfolio_id == subquery.c.portfolio_id,\n            PortfolioRevision.valuation_date == subquery.c.max_date\n        ))\n\n\ndef merge(absorbed_isin, absorbing_isin):\n    \"\"\"\n    It happens that a fundshare has to be merged with another one\n    (by the super admin).\n    In this case, the latest revisions of all portfolios are updated has\n    follow: {'absorbing_id': 10, 'absorbed_id': 20, 'X': 70} =>\n    {'absorbed_id': 30, 'X': 70}\n    \"\"\"\n    absorbed_fund_id = flux.isin_to_fundshare_id(absorbed_isin)\n    absorbing_fund_id = flux.isin_to_fundshare_id(absorbing_isin)\n\n    for revision in get_latest_revisions():\n        if absorbed_fund_id in revision.composition:\n            composition = deepcopy(revision.composition)  # neededs otherwise the orm does not see changes\n\n            # here we are! we replace the absorded fund by the absorbing fund\n            if absorbing_fund_id in composition:\n                composition[absorbing_fund_id] += composition.pop(absorbed_fund_id)\n            else:\n                composition[absorbing_fund_id] = composition.pop(absorbed_fund_id)\n\n            revision.composition = composition\n            db.session.add(revision)\n\n    db.session.commit()\n\n\ndef drop(dropped_isin):\n    \"\"\"\n    It happens that a fundshare is removed by the super admin.\n    In this case, the latest revisions of all portfolios are updated has\n    follow: {'dropped_id': 10, 'X': 70, 'Y': 20} =>\n    {'X': 70/90*100, 'Y': 20/90*100}\n    If dropped_id is the only fund in the revision, it is replaced by safeFund\n    \"\"\"\n    dropped_fund_id = flux.isin_to_fundshare_id(dropped_isin)\n    for revision in get_latest_revisions():\n        if dropped_fund_id in revision.composition:\n            if(len(revision.composition.keys()) == 1):\n                revision.composition = {'safeFund': 100}\n            else:\n                dropped_weight = revision.composition[dropped_fund_id]\n                revision.composition = {\n                    fund_id: float(Decimal(weight / (100 - dropped_weight) * 100).quantize(Decimal('1.'+'0'*config.PRECISION)))\n                    for fund_id, weight in revision.composition.items()\n                    if fund_id != dropped_fund_id\n                }\n\n                # make sure the sum of the weight is 100\n                key, value = revision.composition.popitem()\n                revision.composition[key] = float(Decimal(100 - sum(revision.composition.values())).quantize(Decimal('1.'+'0'*config.PRECISION)))\n\n            db.session.add(revision)\n    db.session.commit()\n","markerStore":{"nextMarkerId":2073,"markersById":{"0":{"range":{"start":{"row":62,"column":78},"end":{"row":62,"column":78}},"properties":{"type":"selection","editorId":27,"goalScreenRange":null,"autoscroll":true,"clip":"forward","preserveFolds":true},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"417":{"range":{"start":{"row":81,"column":0},"end":{"row":81,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"599":{"range":{"start":{"row":79,"column":0},"end":{"row":79,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"745":{"range":{"start":{"row":79,"column":0},"end":{"row":79,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"760":{"range":{"start":{"row":79,"column":0},"end":{"row":79,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"949":{"range":{"start":{"row":79,"column":36},"end":{"row":79,"column":40}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"1002":{"range":{"start":{"row":79,"column":67},"end":{"row":79,"column":97}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"1063":{"range":{"start":{"row":79,"column":95},"end":{"row":79,"column":96}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"1441":{"range":{"start":{"row":31,"column":65},"end":{"row":32,"column":23}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"1633":{"range":{"start":{"row":34,"column":12},"end":{"row":34,"column":59}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"1641":{"range":{"start":{"row":34,"column":13},"end":{"row":34,"column":26}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"1758":{"range":{"start":{"row":34,"column":52},"end":{"row":34,"column":54}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"1891":{"range":{"start":{"row":60,"column":40},"end":{"row":60,"column":42}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":1938,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/nico/projects/bnp-serious-game-api/src/utils/merge_liquidation.py","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"2feb6f0abb8756e5c6bcbf2ee7bb2bf9f1425de1","deserializer":"TextBuffer","version":2},{"text":"import requests\nimport config\nimport json\nimport datetime\nfrom handle_http_error import handle_http_error\n\nbase_url = config.FLUX_URL + '/v2/profile/'\n\n\ndef get_fund(clp, fund_id, currency=None, start_date=None, end_date=None, granularity=None):\n    url = base_url+'%s/fundshare/%s/valuation' % (clp, fund_id)\n\n    if type(start_date) is datetime.datetime or type(start_date) is datetime.date:\n        start_date = start_date.strftime('%Y-%m-%d')\n    if type(end_date) is datetime.datetime or type(end_date) is datetime.date:\n        end_date = end_date.strftime('%Y-%m-%d')\n    filters = []\n    if start_date is not None:\n        filters.append('date_begin=' + str(start_date))\n    if start_date is not None:\n        filters.append('date_end=' + str(end_date))\n    if currency is not None:\n        filters.append('currency=' + currency)\n    if granularity is not None:\n        filters.append('granularity=' + granularity)\n\n    if len(filters):\n        url += '?'\n    url += '&'.join(filters)\n\n    response = requests.get(url)\n    handle_http_error(response, 'flux', fund_id)\n\n    return json.loads(response.text)\n\n\ndef get_last_known_nav(clp, fund_id, currency):\n    return query(\n        '%s/fundshare/%d/valuation?currency=%s' % (\n            clp, int(fund_id), currency\n        ))\n\n\ndef query(path):\n    url = base_url + path\n    response = requests.get(url)\n    if response.status_code:\n        return response.json()\n\n\ndef get_asset_class(clp, fundshare_ids):\n    \"\"\"\n    This function return a python dict with the input fundshare_ids as keys.\n    For each fundshare_id, the value is the asset class of its compartment.\n    Note: the difference between a fund and a fundshare is unclear to me. I use\n    flux DDD here but what flux calls a fundshare_id is called fund_id in\n    market tools\n    \"\"\"\n    url = base_url + clp + '/catalog'\n\n    response = requests.get(url)\n    handle_http_error(response, 'flux', 'catalog')\n    compartments = json.loads(response.text)['compartment']\n\n    formated_data = {}\n    for compartment in compartments:\n        for fund in compartment['fundshare']:\n            formated_data[fund['@id']] = compartment['classif_marketing']['investment_strategy']['classification'][0]['#text']\n\n    return {fund_id: formated_data.get(fund_id) for fund_id in fundshare_ids}\n\n\ndef isin_to_fundshare_id(isin):\n    url = config.FLUX_URL + '/fundshare/%s' % isin\n    response = requests.get(url)\n    handle_http_error(response, 'flux', isin)\n\n    return str(json.loads(response.text)['fundshare']['@id'])\n","markerStore":{"nextMarkerId":34,"markersById":{"0":{"range":{"start":{"row":75,"column":4},"end":{"row":75,"column":21}},"properties":{"type":"selection","editorId":31,"goalScreenRange":null,"autoscroll":true,"preserveFolds":true},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"17":{"range":{"start":{"row":78,"column":0},"end":{"row":78,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"18":{"range":{"start":{"row":78,"column":0},"end":{"row":78,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"22":{"range":{"start":{"row":78,"column":0},"end":{"row":78,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"23":{"range":{"start":{"row":78,"column":0},"end":{"row":78,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":34,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/nico/projects/bnp-serious-game-api/utils/src/clients/flux.py","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"c6a734de2df77c4c34f9d023fd58b55620d12a61","deserializer":"TextBuffer","version":2},{"text":"from models import PortfolioRevision\nfrom datetime import timedelta\nfrom itertools import groupby\nfrom threading import Lock\nimport pandas as pd\nimport logging\nimport decimal\nfrom decimal import Decimal\ndecimal.getcontext().prec = 20  # see bug reports\nPRECISION = 6  # this is decimal precision\nimport traceback\n\nfrom utils import game, date, profile\nfrom repositories import PortfolioRepository\nfrom errors import SafeFundUndefined\n\n\ndef to_float(decimal):\n    rounded_decimal = decimal.quantize(Decimal('1.'+'0'*PRECISION))\n    return float(rounded_decimal)\n\n\ndef compute_safe_fund_amount(previous_amount, year, safe_fund):\n    if safe_fund is None:\n        raise SafeFundUndefined()\n    if year not in safe_fund.keys():\n        logging.warning('No annual rate defined for safe fund in %d' % year)\n        return Decimal(previous_amount) * 1\n    else:\n        return Decimal(previous_amount) * Decimal(1 + safe_fund[year]) ** (Decimal(1)/Decimal(252))\n\n\ndef compute_new_funds_amount(revision, perfs, safe_fund):\n    new_revision_funds = []\n    next_valuation_date = revision.valuation_date + pd.tseries.offsets.BDay()\n\n    # For each fund in the revision composition\n    # compute it's variation and new valuation\n    for fund_id, weight in revision.composition.items():\n        prev_amount = Decimal(revision.amount) * Decimal(weight) / Decimal(100)\n\n        if fund_id == 'safeFund':\n            new_amount = compute_safe_fund_amount(\n                prev_amount,\n                next_valuation_date.year,\n                safe_fund\n            )\n        elif fund_id in perfs:\n            new_amount = prev_amount * Decimal(perfs[fund_id])\n        else:\n            logging.warning('\"%s\" is in a composition but is unknown. Revision will be pulled' % fund_id)\n            new_amount = prev_amount\n\n        new_revision_funds.append({\n            'fund_id': fund_id,\n            'amount': new_amount.quantize(Decimal('1.'+'0'*PRECISION))\n        })\n\n    return new_revision_funds\n\n\nclass DailyUpdater:\n\n    routine_lock = Lock()\n\n    def __init__(self, game_name):\n        self.game = game.get_game(game_name)\n        self.game['safe_fund'] = game.get_safe_fund(game_name)\n        self.portfolio_repository = PortfolioRepository(game_name)\n\n    def recompute_old_revisions(self, local_revisions, perfs_df):\n        for p_id, revisions in groupby(local_revisions, key=lambda r: r.portfolio_id):\n            logging.info('recomputing portfolio %s' % p_id)\n            previous_revision = list(revisions)[0]\n            # revisions are already sorted by keys\n            for revision in list(revisions)[1:]:\n                funds = compute_new_funds_amount(\n                    previous_revision,\n                    perfs_df.loc[revision.valuation_date],\n                    self.game['safe_fund']\n                )\n                amount = sum([fund['amount'] for fund in funds])\n                revision.amount = to_float(amount)\n                revision.composition = {\n                    fund['fund_id']: to_float(Decimal(100) * Decimal(fund['amount']) / Decimal(amount))\n                    for fund in funds[:-1]\n                }\n\n                # to be sure the sum of weights is 100 (due to precision\n                # the sum could be 99.9999999), we compute the last\n                # weight as 100 minus the other weights\n                revision.composition[funds[-1]['fund_id']] = to_float(Decimal(100) - Decimal(sum(revision.composition.values())))\n                previous_revision = revision\n        return local_revisions\n\n    def increment_revisions(self, latest_revisions, edited_revisions, perfs, new_date):\n        # returns revisions with valuation_date = date\n        next_revisions = []\n        for revision in latest_revisions:\n            funds = compute_new_funds_amount(\n                revision,\n                perfs,\n                self.game['safe_fund']\n            )\n            amount = sum([fund['amount'] for fund in funds])\n\n            # some revisions might already have a valuation_date equal to date\n            # if a user has edited its portfolio\n            edited_revision = next((\n                r for r in edited_revisions\n                if r.portfolio_id == revision.portfolio_id),\n                None\n            )\n            if edited_revision is not None:\n                # if the user has edited its portfolio, we won't update\n                # the composition, only the amount\n                edited_revision.amount = to_float(amount)\n                next_revisions.append(edited_revision)\n            else:\n                # if the user has not edited its portfolio, we create\n                # a new revision\n                composition = {\n                    fund['fund_id']: to_float(Decimal(100) * Decimal(fund['amount']) / Decimal(amount))\n                    for fund in funds[:-1]\n                }\n                composition[funds[-1]['fund_id']] = to_float(Decimal(100) - Decimal(sum(composition.values())))\n\n                new_revision = PortfolioRevision(\n                    composition=composition,\n                    valuation_date=new_date,\n                    amount=to_float(amount),\n                    portfolio_id=revision.portfolio_id\n                )\n                next_revisions.append(new_revision)\n        return next_revisions\n\n    def get_revisions_to_save(self, navs_df, update_date):\n        # compute the performances from the valuations\n        # perf(t) = nav(t) / nav(t-1)\n        perfs_df = (navs_df / navs_df.shift()).dropna()\n\n        revisions_to_save = []\n\n        # STEP 1: we recompute the last 20 days revisions in case\n        # a fund had a late valuation\n        logging.info('Recomputing revisions from the last 20 days')\n        local_revisions = self.portfolio_repository.get_revisions(\n            from_date=str(perfs_df.index.values[0]),\n            to_date=update_date\n        )\n        revisions_to_save += self.recompute_old_revisions(local_revisions, perfs_df)\n        logging.info('Recomputation successful. %s revisions will be updated', len(revisions_to_save))\n\n        # STEP 2: we create new revisions if they are not yet here\n        # If a portfolio has been edited, we only update it's amount\n        # (the user decides of its composition)\n        latest_revisions = [\n            revision for revision in local_revisions\n            if revision.valuation_date == update_date\n        ]\n        latest_perfs = perfs_df.truncate(before=update_date + timedelta(days=1))\n        for d, perfs in latest_perfs.iterrows():\n            d = d.to_datetime()\n            logging.info('**')\n            logging.info('Adding revisions with valuation date %s' % d)\n            edited_revisions = self.portfolio_repository.get_revisions(\n                from_date=d,\n                to_date=d,\n                amount_is_null=True,\n            )\n            logging.info('%s revisions have been edited for this valuation date' % len(edited_revisions))\n            newly_computed_revisions = self.increment_revisions(\n                latest_revisions,\n                edited_revisions,\n                perfs,\n                d\n            )\n            logging.info('Computation of new revision successful. %s revisions will be added' % len(newly_computed_revisions))\n            revisions_to_save += newly_computed_revisions\n\n            # if a player has created a new portfolio,\n            # its first revision has a not null amount\n            new_revisions = self.portfolio_repository.get_revisions(\n                from_date=d,\n                to_date=d,\n                amount_is_null=False,\n            )\n\n            latest_revisions = newly_computed_revisions + new_revisions\n        return revisions_to_save\n\n    def run_one_day(self, game_name):\n        DailyUpdater.routine_lock.acquire(blocking=True)\n        try:\n            target_date = date.get_current_date(game_name) + timedelta(days=1)\n            target_weekday = target_date.weekday()\n            update_date = date.get_update_date(game_name)\n\n            logging.info('*'*30)\n            logging.info('Starting %s daily routine. Target date is: %s' % (game_name, target_date))\n            if target_weekday < 4 or target_weekday == 6:\n                logging.info('Requesting Flux-API for navs')\n                # The call to BNP-FLUX:\n                # Let's get the net-asset-values from all funds of the profile from the past 20 days\n                nav_matrix = profile.get_nav_matrix(\n                    self.game['id'], self.game['clp'], self.game['currency'],\n                    target_date - timedelta(days=20),\n                    target_date\n                )\n                logging.info('Flux-API requests were succesful')\n\n                # Update portfolios in Serious-game database\n                revisions = self.get_revisions_to_save(nav_matrix, update_date)\n                logging.info('Saving revisions in database')\n                for revision in revisions:\n                    revision.save()\n                logging.info('All revisions have been saved')\n                date.increment_current_date(game_name)\n                date.set_update_date(game_name, str(nav_matrix.index.values[-1]))\n                logging.info('Current date is now %s and update_date is %s' % (target_date, str(nav_matrix.index.values[-1])))\n                logging.info('Daily routine finished! :-)')\n                return 'OK'\n            else:\n                logging.info('No daily routine on %s. Everything is fine.' % target_date.strftime(\"%A\"))\n                date.increment_current_date(game_name)\n                return 'OK'\n        except Exception as e:\n            logging.error('Error in daily routine: ' + traceback.format_exc())\n            raise\n        finally:\n            DailyUpdater.routine_lock.release()\n\n    def run_routine(self, game_name, number_of_days_forward):\n        for i in range(number_of_days_forward):\n            self.run_one_day(game_name)\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":36},"end":{"row":0,"column":36}},"properties":{"type":"selection","editorId":55,"goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":10,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/nico/projects/bnp-serious-game-api/src/cron/daily/updater.py","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"cac8f1ee48da0891f6bf9ecd6ad420fab797422f","deserializer":"TextBuffer","version":2},{"text":"import os, logging\nfrom shared_config import *\n\nDEBUG = os.getenv('DEBUG_MODE', False)\nAPPLICATION_ROOT = os.getenv('SERIOUS_GAME_APPLICATION_ROOT', '/serious-game')\nHOST = os.getenv('SERIOUS_GAME_HOST', '0.0.0.0')\nPORT = int(os.getenv('SERIOUS_GAME_PORT', '5021'))\n\nPOSTGRES = {\n    'user': os.getenv('SERIOUS_GAME_POSTGRES_USER', 'postgres'),\n    'pw': os.getenv('SERIOUS_GAME_POSTGRES_PW', ''),\n    'host': os.getenv('SERIOUS_GAME_POSTGRES_HOST', os.getenv('DB_PORT_5432_TCP_ADDR')),\n    'port': os.getenv('SERIOUS_GAME_POSTGRES_PORT', os.getenv('DB_PORT_5432_TCP_PORT')),\n    'db': os.getenv('SERIOUS_GAME_POSTGRES_DB', 'postgres'),\n}\nPOSTGRES_URI = 'postgresql://%(user)s:%(pw)s@%(host)s:%(port)s/%(db)s' % POSTGRES\n\nlogging.basicConfig(\n    filename=os.getenv('SERIOUS_GAME_LOG', 'server.log'),\n    level=logging.DEBUG,\n    format='%(levelname)s: %(asctime)s module:%(module)s %(lineno)d %(message)s',\n    datefmt='%d/%m/%y %H:%M:%S',\n)\n\nPRECISION = 6\n","markerStore":{"nextMarkerId":36,"markersById":{"0":{"range":{"start":{"row":3,"column":37},"end":{"row":3,"column":37}},"properties":{"type":"selection","editorId":59,"goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"30":{"range":{"start":{"row":3,"column":37},"end":{"row":3,"column":38}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"31":{"range":{"start":{"row":3,"column":17},"end":{"row":3,"column":18}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"34":{"range":{"start":{"row":3,"column":37},"end":{"row":3,"column":38}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"35":{"range":{"start":{"row":3,"column":17},"end":{"row":3,"column":18}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":50,"undoStack":[],"redoStack":[{"type":"checkpoint","id":47,"snapshot":{"0":{"range":[[3,36],[3,36]],"properties":{"type":"selection","editorId":59,"goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[3,32],[3,32]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"22":{"range":[[3,36],[3,37]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"23":{"range":[[3,17],[3,18]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"24":{"range":[[3,0],[4,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":46,"snapshot":{"0":{"range":[[3,36],[3,36]],"properties":{"type":"selection","editorId":59,"goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[3,32],[3,32]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"22":{"range":[[3,36],[3,37]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"23":{"range":[[3,17],[3,18]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"24":{"range":[[3,0],[4,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":45,"snapshot":{"0":{"range":[[3,36],[3,36]],"properties":{"type":"selection","editorId":59,"goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[3,32],[3,32]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[3,35],[3,35]],"newRange":[[3,35],[3,36]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[3,34],[3,34]],"newRange":[[3,34],[3,35]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[3,33],[3,33]],"newRange":[[3,33],[3,34]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[3,32],[3,37]],"newRange":[[3,32],[3,33]],"oldText":"False","newText":"T"}},{"type":"checkpoint","id":38,"snapshot":{"0":{"range":[[3,32],[3,37]],"properties":{"type":"selection","editorId":59,"goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}}]},"encoding":"utf8","filePath":"/home/nico/projects/bnp-serious-game-api/src/config.py","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"7fdc4d181b8071a495ff64b21772684f1b43f0b5","deserializer":"TextBuffer","version":2},{"text":"from . import db\nfrom sqlalchemy.dialects.postgresql import JSON\n\n\nclass PortfolioRevision(db.Model):\n    __tablename__ = 'portfolio_revision'\n\n    def __init__(self, composition, valuation_date, amount, portfolio_id):\n        self.composition = composition\n        self.valuation_date = valuation_date\n        self.amount = amount\n        self.portfolio_id = portfolio_id\n\n    id = db.Column(db.Integer, primary_key=True)\n    composition = db.Column(JSON)\n    valuation_date = db.Column(db.Date)\n    amount = db.Column(db.Numeric)\n    portfolio_id = db.Column(db.Integer, db.ForeignKey('portfolio.id'), nullable=False)\n\n    def save(self):\n        db.session.add(self)\n        db.session.commit()\n\n    def setId(self, id):\n        self.id = id\n\n    def to_json(self):\n        # TODO: this is ugly\n        if not self.amount:\n            self.amount = 0\n        return {\n            'id': self.id,\n            'composition': self.composition,\n            'valuation_date': self.valuation_date.isoformat(),\n            'amount': float(self.amount),\n            'portfolio_id': self.portfolio_id,\n        }\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":63,"preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/nico/projects/bnp-serious-game-api/src/models/portfolioRevision.py","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"81327d82fc490d3a8a456120d0dc183818848b38","deserializer":"TextBuffer","version":2},{"text":"import json\nfrom threading import Thread\nfrom utils import game\nfrom flask import Blueprint, Response, request, jsonify\nfrom flask.ext.restful import reqparse\nfrom flask.ext.restful.reqparse import Argument\nfrom cron.daily.updater import  DailyUpdater\nfrom decorators import catch_exceptions\nfrom utils import game, merge_liquidation\nfrom validate_request import parse\nfrom cron.daily.updater import  DailyUpdater\nfrom decorators import catch_exceptions, required_admin, required_authentication\nadmin_blueprint = Blueprint('admin', __name__)\n\n\n@admin_blueprint.route('/new', methods=['POST'])\n@catch_exceptions\n@required_authentication\n@required_admin\ndef create_new_game(user):\n    arguments = [\n        Argument('start_date', type=str, help='start_date argument is required', location='json', required=True),\n        Argument('country', type=str, help='country argument is required', location='json', required=True),\n        Argument('language', type=str, help='language argument is required', location='json', required=True),\n        Argument('profile', type=str, help='profile argument is required', location='json', required=True),\n        Argument('currency', type=str, help='currency argument is required', location='json', required=True),\n        Argument('name', type=str, help='name argument is required', location='json', required=True),\n    ]\n    request_params = parse(arguments)\n\n    game_obj = game.new_game(request_params.start_date, request_params.country, request_params.language, request_params.profile, request_params.currency, request_params.name)\n\n    return Response(\n        json.dumps(game_obj.to_json()),\n        headers={'Cache-Control': 'no-cache'},\n        mimetype='application/json'\n    )\n\n\n# TODO: this should be a POST. Everybody can set a safe fund for a game\n@admin_blueprint.route('/game/<game_name>/safe-fund/year/<int:year>/annual-rate/<float:annual_rate>/', methods=['GET'])\ndef create_or_update_safe_fund(game_name, year, annual_rate):\n    safe_fund_revision = game.set_safe_fund_rate(game_name, year, annual_rate)\n\n    return Response(\n        json.dumps(safe_fund_revision.to_json()),\n        headers={'Cache-Control': 'no-cache'},\n        mimetype='application/json'\n    )\n\n\n@admin_blueprint.route('/fund/merge', methods=['PUT'])\n@catch_exceptions\n@required_authentication\n@required_admin\ndef merge_funds(user):\n    arguments = [\n        Argument('absorbing_isin', type=str, help='absorbing_isin argument is required', location='json', required=True),\n        Argument('absorbed_isin', type=str, help='absorbed_isin argument is required', location='json', required=True),\n    ]\n    args = parse(arguments)\n    merge_liquidation.merge(args.absorbed_isin, args.absorbing_isin)\n    return 'OK', 200\n\n\n@admin_blueprint.route('/fund/drop', methods=['PUT'])\n@catch_exceptions\n@required_authentication\n@required_admin\ndef drop_funds(user):\n    arguments = [\n        Argument('isin_to_drop', type=str, help='isin_to_drop argument is required', location='json', required=True),\n    ]\n    args = parse(arguments)\n    merge_liquidation.drop(args.isin_to_drop)\n    return 'OK', 200\n","markerStore":{"nextMarkerId":254,"markersById":{"0":{"range":{"start":{"row":71,"column":30},"end":{"row":71,"column":30}},"properties":{"type":"selection","editorId":67,"goalScreenRange":null,"preserveFolds":true,"autoscroll":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"175":{"range":{"start":{"row":12,"column":0},"end":{"row":12,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"240":{"range":{"start":{"row":19,"column":24},"end":{"row":19,"column":25}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"241":{"range":{"start":{"row":19,"column":19},"end":{"row":19,"column":20}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":394,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/nico/projects/bnp-serious-game-api/src/routes/admin.py","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"861df58ab5b31a1cced628078253f91ceb13f06d","deserializer":"TextBuffer","version":2},{"text":"Flask==0.10.1\r\nFlask-Cors==1.8.0\r\nFlask-Migrate==1.2.0\r\nFlask-RESTful==0.2.12\r\nFlask-SQLAlchemy==2.0\r\nFlask-Script==2.0.5\r\nJinja2==2.7.3\r\nMako==1.0.1\r\nMarkupSafe==0.23\r\nPygments==2.0.1\r\nSQLAlchemy==0.9.8\r\nWerkzeug==0.9.6\r\nalembic==0.7.5.post2\r\naniso8601==0.92\r\ncolorama==0.3.3\r\ncoverage==3.7.1\r\ngunicorn==19.1.1\r\nitsdangerous==0.24\r\nmock==1.0.1\r\nnose==1.3.6\r\nnumpy==1.9.2\r\npandas==0.16.0\r\npsycopg2==2.5.4\r\npyinotify==0.9.5\r\npython-dateutil==2.4.2\r\npython-termstyle==0.1.10\r\npytz==2014.10\r\nrequests==2.5.1\r\nrequests-mock==0.3.0\r\nsix==1.8.0\r\nsniffer==0.3.5\r\ntap.py==1.4\r\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":91,"preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/nico/projects/bnp-serious-game-api/requirements.txt","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"521389892e7ea0abb55a884605ddf23fee60f939","deserializer":"TextBuffer","version":2},{"text":"machine:\n  environment:\n    PYTHONPATH: src:test:utils/src:utils/test\n    AUTHENTICATOR_URL: http://bnp-validation.theo.do/authenticator\n    SERIOUS_GAME_URL: http://127.0.0.1:5021/serious-game\n    SERIOUS_GAME_POSTGRES_USER: ubuntu\n    SERIOUS_GAME_POSTGRES_HOST: 127.0.0.1\n    SERIOUS_GAME_POSTGRES_PORT: 5432\n    SERIOUS_GAME_POSTGRES_DB: circle_test\n    DEBUG_MODE: true\n  python:\n    version: 3.4.0\n\ncheckout:\n  post:\n    - git submodule sync\n    - git submodule update --init\n\ntest:\n    pre:\n        - python src/server.py:\n            background: true\n    override:\n        - python -m unittest discover\n\ndatabase:\n    override:\n        - python src/manage.py db upgrade\n","markerStore":{"nextMarkerId":7,"markersById":{"0":{"range":{"start":{"row":9,"column":20},"end":{"row":9,"column":20}},"properties":{"type":"selection","editorId":95,"goalScreenRange":null,"autoscroll":true,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":38,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/nico/projects/bnp-serious-game-api/circle.yml","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"ab62aa1abf7dcee7bcd712c8ef8e18b5f0845dc2","deserializer":"TextBuffer","version":2},{"text":"import json\nfrom flask import Blueprint, Response\nfrom utils import game as game_util, date\nfrom decorators import catch_exceptions\n\ngame_blueprint = Blueprint('game', __name__)\n\n\n# Return a given game information\n@game_blueprint.route('/game/<game_name>', methods=['GET'])\n@catch_exceptions\ndef get_game_data(game_name):\n    game_data = game_util.get_game(game_name)\n\n    return Response(\n        json.dumps(game_data),\n        headers={'Cache-Control': 'no-cache'},\n        mimetype='application/json'\n    )\n\n\n@game_blueprint.route('/game/<game_name>/dates', methods=['GET'])\n@catch_exceptions\ndef get_dates(game_name):\n    dates = {\n        'current_date': str(date.get_current_date(game_name)),\n        'start_date': str(date.get_start_date(game_name)),\n        'update_date': str(date.get_update_date(game_name)),\n    }\n\n    return Response(\n        json.dumps(dates),\n        headers={'Cache-Control': 'no-cache'},\n        mimetype='application/json'\n    )\n\n\n@game_blueprint.route('/game/<game_name>/safe-fund/', methods=['GET'])\n@catch_exceptions\ndef get_safe_fund_route(game_name):\n    safe_fund = game_util.get_safe_fund(game_name)\n\n    return Response(\n        json.dumps(safe_fund),\n        headers={'Cache-Control': 'no-cache'},\n        mimetype='application/json'\n    )\n\n\n@game_blueprint.route('/game', methods=['GET'])\n@catch_exceptions\ndef get_games():\n    games = [game.to_json() for game in game_util.get_games()]\n    return Response(\n        json.dumps(games),\n        headers={'Cache-Control': 'no-cache'},\n        mimetype='application/json'\n    )\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":99,"preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/nico/projects/bnp-serious-game-api/src/routes/game.py","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"da1a895c9a4b51216230ba2c4a83cba9ddc27a9b","deserializer":"TextBuffer","version":2},{"text":"from datetime import timedelta, datetime\nfrom sqlalchemy import func, create_engine, distinct\nfrom sqlalchemy.exc import IntegrityError\nfrom sqlalchemy.orm import scoped_session, sessionmaker\n\nimport config\nfrom errors import UnknownGame, GameAlreadyExists\nfrom models import Game, SafeFundRevisions, PortfolioRevision, Portfolio\nfrom utils import date\n\n\ndef get_game(game_identifier):\n    try:\n        game_id = int(game_identifier)\n        game = Game.query.filter_by(id=game_id).first()\n    except:\n        game = Game.query.filter_by(game_name=game_identifier).first()\n\n    if game is None:\n        raise UnknownGame(game_identifier)\n\n    return game.to_json()\n\n\ndef new_game(start_date, country, language, profile, currency, game_name):\n    start_date = datetime.strptime(start_date, \"%Y-%m-%d\").date()\n\n    current_date = start_date\n    update_date = date.get_valuation_date(start_date + timedelta(1))\n\n    clp = '%s/%s/%s' % (country, language, profile)\n\n    game = Game(start_date, update_date, current_date, currency, clp, game_name)\n    try:\n        game.save()\n    except IntegrityError:\n        raise GameAlreadyExists(game_name)\n\n    return game\n\n\ndef get_safe_fund(game):\n    game = get_game(game)\n    safe_fund_revisions = SafeFundRevisions.query.\\\n        filter_by(game_id=game['id']).order_by(SafeFundRevisions.year).all()\n    if len(safe_fund_revisions) > 0:\n        safe_fund = {\n            revision.year: float(revision.annual_rate)\n            for revision in safe_fund_revisions\n        }\n    else:\n        safe_fund = None\n    return safe_fund\n\n\ndef set_safe_fund_rate(game, year, annual_rate):\n    game = get_game(game)\n    safe_fund_revision = SafeFundRevisions.query.\\\n        filter_by(game_id=game['id']).filter_by(year=year).first()\n\n    if safe_fund_revision is None:\n        safe_fund_revision = SafeFundRevisions(game['id'], year, annual_rate)\n    else:\n        safe_fund_revision.annual_rate = annual_rate\n    safe_fund_revision.save()\n    return safe_fund_revision\n\ndef get_games():\n    return Game.query.all()\n\ndef get_game_fund_ids(game_id):\n    engine = create_engine(config.POSTGRES_URI, convert_unicode=True)\n    session = scoped_session(sessionmaker(autocommit=False, autoflush=False, bind=engine))\n\n    query = session.query(\n        distinct(func.json_object_keys(PortfolioRevision.composition))\n    ).join(Portfolio).filter(Portfolio.game_id == game_id)\n\n    # the json_object_keys returns keys as tuples of one element\n    fund_ids = [fund_id[0] for fund_id in query.all() if fund_id[0] != 'safeFund']\n    return fund_ids\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":103,"preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/nico/projects/bnp-serious-game-api/src/utils/game.py","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"97ce68fa76a147d8c6a634b6f5e77ed362ab2289","deserializer":"TextBuffer","version":2},{"text":"import os\nimport tempfile\nimport json\nimport unittest\nfrom mock import patch\n\nimport config\nfrom server import create_app\nfrom models import db, PortfolioRevision, Game, Portfolio\nfrom mocks import authenticator_mock\nfrom utils import merge_liquidation\n\n\nclass TestGame(unittest.TestCase):\n\n    def setUp(self):\n        app = create_app()\n        app.config['TESTING'] = True\n        self.client = app.test_client()\n\n        db.create_all()\n        db.session.add(Game('2015-01-01', '2015-01-01', '2015-01-01', 'EUR', 'YOLO', 'YOLO'))\n        db.session.commit()\n\n        self.patcher = patch('clients.authenticator.me')\n        me = self.patcher.start()\n        me.return_value = authenticator_mock.me_as_admin\n\n        self.headers = {'Content-Type': 'application/json'}\n\n    def tearDown(self):\n        db.session.remove()\n        db.drop_all()\n\n    def test_create_game(self):\n        response = self.client.post(\n            \"/serious-game/new\",\n            data=json.dumps({\n                'start_date': '2015-01-01',\n                'country': 'NLD',\n                'language': 'ENG',\n                'profile': 'EX_NL-XDM',\n                'currency': 'EUR',\n                'name': 'GAME1',\n            }),\n            headers=self.headers,\n        )\n        self.assertEqual(response.status_code, 200)\n        result = json.loads(response.data.decode('utf-8'))\n        self.assertEqual(result[\"game_name\"], \"GAME1\")\n\n    def test_it_returns_an_error_if_game_name_already_exists(self):\n        response = self.client.post(\n            \"/serious-game/new\",\n            data=json.dumps({\n                'start_date': '2015-01-01',\n                'country': 'NLD',\n                'language': 'ENG',\n                'profile': 'EX_NL-XDM',\n                'currency': 'EUR',\n                'name': 'YOLO',\n            }),\n            headers=self.headers,\n        )\n        self.assertEqual(response.status_code, 400)\n        result = json.loads(response.data.decode('utf-8'))\n        self.assertEqual(result[\"key\"], \"GAME_ALREADY_EXISTS\")\n\nif __name__ == '__main__':\n    unittest.main()\n","markerStore":{"nextMarkerId":197,"markersById":{"0":{"range":{"start":{"row":65,"column":58},"end":{"row":65,"column":58}},"properties":{"type":"selection","editorId":111,"goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"191":{"range":{"start":{"row":65,"column":57},"end":{"row":65,"column":58}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"192":{"range":{"start":{"row":65,"column":27},"end":{"row":65,"column":28}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"195":{"range":{"start":{"row":65,"column":57},"end":{"row":65,"column":58}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"196":{"range":{"start":{"row":65,"column":27},"end":{"row":65,"column":28}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":154,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/nico/projects/bnp-serious-game-api/test/resources/test_game.py","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"b7323f4bfb094f565127fe46c444e67c6a1b575a","deserializer":"TextBuffer","version":2},{"text":"import os\nimport tempfile\nimport json\nimport unittest\nfrom mock import patch\n\nimport config\nfrom server import create_app\nfrom models import db, PortfolioRevision, Game, Portfolio\nfrom mocks import authenticator_mock\nfrom utils import merge_liquidation\n\n\nclass TestPortfolio(unittest.TestCase):\n\n    def setUp(self):\n        app = create_app()\n        app.config['TESTING'] = True\n        self.client = app.test_client()\n\n        db.create_all()\n        db.session.add(Game('2015-01-01', '2015-01-01', '2015-01-01', 'EUR', 'YOLO', 'YOLO'))\n        db.session.commit()\n\n        self.patcher = patch('clients.authenticator.me')\n        me = self.patcher.start()\n        me.return_value = authenticator_mock.me_as_admin\n\n        self.headers = {'Content-Type': 'application/json'}\n\n    def tearDown(self):\n        db.session.remove()\n        db.drop_all()\n\n    # TODO: separe in several tests\n    # def test_portfolio_creation(self):\n    #     response = self.client.post(\n    #             \"/serious-game/game/YOLO/portfolio\",\n    #             data=json.dumps({\n    #                 \"composition\": {\"safeFund\": 100},\n    #                 \"initial_amount\": 200\n    #             }),\n    #             headers=self.headers\n    #         )\n    #     self.assertEqual(response.status_code, 201)\n    #     portfolio_id = result = json.loads(response.data.decode('utf-8'))[\"portfolio_id\"]\n    #\n    #     response = self.client.get(\n    #         \"/serious-game/game/YOLO/portfolio/%s/composition\" % portfolio_id,\n    #         headers=self.headers\n    #     )\n    #     self.assertTrue('\"safeFund\": 100' in json.loads(response.data.decode('utf-8')))\n    #\n    #     response = self.client.delete(\n    #         config.SERIOUS_GAME_URL + \"/game/unittest/portfolio\",\n    #         data=json.dumps({\n    #             \"portfolio_id\": portfolio_id,\n    #         }),\n    #         headers=self.headers\n    #     )\n    #     self.assertEqual(response.status_code, 200)\n\nif __name__ == '__main__':\n    unittest.main()\n","markerStore":{"nextMarkerId":401,"markersById":{"0":{"range":{"start":{"row":28,"column":58},"end":{"row":28,"column":58}},"properties":{"type":"selection","editorId":119,"goalScreenRange":null,"autoscroll":true,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"84":{"range":{"start":{"row":35,"column":33},"end":{"row":35,"column":38}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"399":{"range":{"start":{"row":28,"column":58},"end":{"row":28,"column":59}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"400":{"range":{"start":{"row":28,"column":23},"end":{"row":28,"column":24}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":398,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/nico/projects/bnp-serious-game-api/test/resources/test_portfolio.py","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"cabc106497c47d024043e08ac893471f64e7b2ef","deserializer":"TextBuffer","version":2},{"text":"import requests\nimport json\nfrom functools import wraps\nfrom flask import jsonify, request\n\nimport config\nfrom handle_http_error import handle_http_error\n\nROLE_USER = 'USER'\nROLE_ADMIN = 'ADMIN'\n\n\ndef me():\n    if not request.headers.get('Authorization'):\n        response = jsonify(message='Missing authorization header')\n        response.status_code = 401\n        return response\n\n    url = config.AUTHENTICATOR_URL + '/me'\n    headers = {'Authorization': request.headers.get('Authorization')}\n\n    response = requests.get(\n        url,\n        headers=headers\n    )\n    handle_http_error(response)\n    return response\n\n\ndef with_profile(func):\n    @wraps(func)\n    def decorated_function(*args, **kwargs):\n        response = me()\n\n        if response.status_code == 200:\n            user = response.json()\n            kwargs['profile'] = user['profile']\n            return func(*args, **kwargs)\n        else:\n            response = jsonify(message='Authentication failed')\n            response.status_code = 401\n            return response\n    return decorated_function\n\n\ndef with_user_id(func):\n    @wraps(func)\n    def decorated_function(*args, **kwargs):\n        response = me()\n\n        if response.status_code == 200:\n            user = response.json()\n            kwargs['user_id'] = user['id']\n            return func(*args, **kwargs)\n        else:\n            response = jsonify(message='Authentication failed')\n            response.status_code = 401\n            return response\n    return decorated_function\n\n\ndef save_profile(profile):\n    url = config.AUTHENTICATOR_URL + '/me'\n    headers = {\n        'Content-Type': 'application/json',\n        'Authorization': request.headers.get('Authorization')\n    }\n\n    response = requests.put(\n        url,\n        json={'profile': profile},\n        headers=headers\n    )\n    handle_http_error(response)\n    return response\n\n\ndef get_users(ids=None, emails=None):\n    url = config.AUTHENTICATOR_URL + '/user'\n\n    response = requests.get(url, params={\n        'ids': ids,\n        'emails': emails,\n    })\n    handle_http_error(response)\n\n    return json.loads(response.text)\n\n\ndef get_team_members(team_members):\n    if not request.headers.get('Authorization'):\n        response = jsonify(message='Missing authorization header')\n        response.status_code = 401\n        return response\n\n    url = config.AUTHENTICATOR_URL + '/team'\n    headers = {\n        'Content-Type': 'application/json',\n        'Authorization': request.headers.get('Authorization')\n    }\n\n    response = requests.get(\n        url,\n        params={\n            'users': team_members\n        },\n        headers=headers\n    )\n\n    handle_http_error(response)\n    return json.loads(response.text)['users']\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":141,"preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/nico/projects/bnp-serious-game-api/utils/src/clients/authenticator.py","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"180894d22bb5e0e2f25686da25f5256b2266e3ee","deserializer":"TextBuffer","version":2},{"text":"from functools import wraps\n\nfrom clients import authenticator\nimport errors\n\n\ndef required_admin(func):\n    @wraps(func)\n    def decorated_function(*args, **kwargs):\n        role = kwargs['user']['role']\n        if role != authenticator.ROLE_ADMIN:\n            raise errors.AdminRoleRequired(role)\n        return func(*args, **kwargs)\n\n    return decorated_function\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":145,"preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/nico/projects/bnp-serious-game-api/utils/src/decorators/required_admin.py","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"9f3652c83b2aa83221ce7052cf900aa2556f0500","deserializer":"TextBuffer","version":2},{"text":"from functools import wraps\nfrom flask import jsonify\n\nfrom clients import authenticator\n\n\ndef required_authentication(func):\n    @wraps(func)\n    def decorated_function(*args, **kwargs):\n        response = authenticator.me()\n\n        if response.status_code == 200:\n            user = response.json()\n            kwargs['user'] = user\n            return func(*args, **kwargs)\n        else:\n            response = jsonify(message='Authentication failed')\n            response.status_code = 401\n            return response\n\n    return decorated_function\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":149,"preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/nico/projects/bnp-serious-game-api/utils/src/decorators/required_authentication.py","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"485ff8d29acdb42baeee1224bf178f1859f5fed3","deserializer":"TextBuffer","version":2},{"text":"\"\"\"\n    Catch user-defined exceptions instead of raising a HTTP 500 error\n    This could be accomplished by Flask itself, but is not supported when using\n    blueprints (argh) (or at least I haven't found how)\n\"\"\"\nfrom functools import wraps\nfrom flask import jsonify\nfrom requests.exceptions import ConnectionError\nimport re\nimport traceback\n\nfrom errors import CustomException\nimport config\nimport logging\n\n\ndef catch_exceptions(func):\n    @wraps(func)\n    def decorated_function(*args, **kwargs):\n        # We try to execute this function\n        try:\n            return_value = func(*args, **kwargs)\n\n        # We catch defined exceptions\n        except CustomException as err:\n            stack = [config.APPLICATION_ROOT] if err.stack is None else err.stack + [config.APPLICATION_ROOT]\n            response = {\n                'message': err.message,\n                'value': err.value,\n                'key': err.key,\n                'stack': stack,\n            }\n            if config.DEBUG == True:\n                response['traceback'] = traceback.format_exc()\n            logging.error(str(err))\n            response = jsonify(response)\n            response.status_code = err.status_code\n            return response\n\n        # We catch requests to other services exceptions\n        except ConnectionError as err:\n            try:\n                service = re.search('http://[^/]+(/[^/]+)', err.request.url).groups()[0]\n            except:\n                service = '/??'\n\n            response = {\n                'message': 'Error requesting URL',\n                'value': err.request.url,\n                'key': 'HTTP_CONNECTION_EXCEPTION',\n                'stack': [service],\n            }\n            logging.error(str(err))\n            response = jsonify(response)\n            response.status_code = 503\n            return response\n\n        # We catch undefined exceptions\n        except Exception as err:\n            response = {\n                'message': None,\n                'value': None,\n                'key': 'UNDEFINED_EXCEPTION',\n                'stack': [config.APPLICATION_ROOT],\n            }\n            if config.DEBUG == True:\n                response['message'] = str(err)\n                response['traceback'] = traceback.format_exc()\n            logging.error(traceback.format_exc())\n            response = jsonify(response)\n            response.status_code = 500\n            return response\n\n        # If nothing went wrong, we pipe the response\n        return return_value\n    return decorated_function\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":177},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/nico/projects/bnp-serious-game-api/utils/src/decorators/catch_exceptions.py","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"02fd73a76dd5d23eb6e32684c3b20c060845e09c","deserializer":"TextBuffer","version":2},{"text":"import json\nimport re\nfrom errors import CustomException, UnknownFundId\n\n\ndef handle_http_error(response, service=None, value=None):\n    if response.status_code >= 400:\n        try:\n            error = json.loads(response.text)\n\n            if service == 'flux':\n                if error.get('exception_name') == 'InvalidGenericIDException':\n                    exception = UnknownFundId(value)\n                else:\n                    exception = CustomException(\n                        message=error.get('exception_message', error.get('message')),\n                        value=None,\n                        key='FLUX_EXCEPTION',\n                        status_code=response.status_code,\n\n                    )\n                exception.stack = ['/flux']\n            else:\n                exception = CustomException(\n                    message=error['message'],\n                    value=error['value'],\n                    key=error['key'],\n                    stack=error['stack'],\n                    status_code=response.status_code,\n                )\n        except Exception:\n            try:\n                service = re.search('http:\\/\\/[^\\/]+(\\/[^\\/]+)', response.url).groups()[0]\n            except:\n                service = '/??'\n            exception = CustomException(\n                message='Error status >=400 but error content was not json',\n                value={'text': response.text, 'url': response.url},\n                key='UNDEFINED_EXCEPTION',\n                status_code=response.status_code,\n                stack=[service],\n            )\n        raise exception\n","markerStore":{"nextMarkerId":134,"markersById":{"0":{"range":{"start":{"row":15,"column":63},"end":{"row":15,"column":63}},"properties":{"type":"selection","editorId":181,"goalScreenRange":null,"autoscroll":true},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":{"start":{"row":7,"column":0},"end":{"row":7,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"18":{"range":{"start":{"row":7,"column":0},"end":{"row":7,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"40":{"range":{"start":{"row":12,"column":0},"end":{"row":12,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"124":{"range":{"start":{"row":16,"column":0},"end":{"row":16,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":132,"undoStack":[{"type":"checkpoint","id":2,"snapshot":{"0":{"range":[[9,0],[9,0]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[9,0],[9,0]],"newRange":[[9,0],[9,12]],"oldText":"","newText":"            "}},{"type":"checkpoint","id":5,"snapshot":{"0":{"range":[[9,12],[9,12]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":6,"snapshot":{"0":{"range":[[6,35],[6,35]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"1":{"range":[[9,0],[10,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[6,35],[6,35]],"newRange":[[6,35],[7,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[7,0],[7,0]],"newRange":[[7,0],[7,8]],"oldText":"","newText":"        "}},{"type":"checkpoint","id":9,"snapshot":{"0":{"range":[[7,8],[7,8]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"1":{"range":[[10,0],[11,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":10,"snapshot":{"0":{"range":[[7,8],[7,8]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"2":{"range":[[7,0],[8,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"3":{"range":[[10,0],[11,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[7,8],[7,8]],"newRange":[[7,8],[7,9]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[7,9],[7,9]],"newRange":[[7,9],[7,10]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[7,10],[7,10]],"newRange":[[7,10],[7,11]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[7,11],[7,11]],"newRange":[[7,11],[7,12]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[7,12],[7,12]],"newRange":[[7,12],[7,13]],"oldText":"","newText":"t"}},{"type":"checkpoint","id":19,"snapshot":{"0":{"range":[[7,13],[7,13]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"2":{"range":[[7,0],[8,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"3":{"range":[[10,0],[11,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"4":{"range":[[7,8],[7,8]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"checkpoint","id":20,"snapshot":{"0":{"range":[[7,13],[7,13]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"2":{"range":[[7,0],[8,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"3":{"range":[[10,0],[11,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"4":{"range":[[7,8],[7,8]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"checkpoint","id":21,"snapshot":{"0":{"range":[[7,13],[7,13]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"2":{"range":[[7,0],[8,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"3":{"range":[[10,0],[11,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"4":{"range":[[7,8],[7,8]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"checkpoint","id":22,"snapshot":{"0":{"range":[[7,13],[7,13]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"2":{"range":[[7,0],[8,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"3":{"range":[[10,0],[11,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"4":{"range":[[7,8],[7,8]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[7,13],[7,13]],"newRange":[[7,13],[7,15]],"oldText":"","newText":"()"}},{"type":"checkpoint","id":23,"snapshot":{"0":{"range":[[7,15],[7,15]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"2":{"range":[[7,0],[8,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"3":{"range":[[10,0],[11,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"4":{"range":[[7,8],[7,8]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"checkpoint","id":24,"snapshot":{"0":{"range":[[7,14],[7,14]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"9":{"range":[[7,13],[7,14]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"10":{"range":[[7,14],[7,15]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"11":{"range":[[7,13],[7,14]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"12":{"range":[[7,0],[8,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"13":{"range":[[10,0],[11,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":25,"snapshot":{"0":{"range":[[7,14],[7,14]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"9":{"range":[[7,13],[7,14]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"10":{"range":[[7,14],[7,15]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"11":{"range":[[7,13],[7,14]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"12":{"range":[[7,0],[8,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"13":{"range":[[10,0],[11,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":26,"snapshot":{"0":{"range":[[7,14],[7,14]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"9":{"range":[[7,13],[7,14]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"10":{"range":[[7,14],[7,15]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"11":{"range":[[7,13],[7,14]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"12":{"range":[[7,0],[8,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"13":{"range":[[10,0],[11,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[7,14],[7,14]],"newRange":[[7,14],[7,16]],"oldText":"","newText":"''"}},{"type":"checkpoint","id":27,"snapshot":{"0":{"range":[[7,16],[7,16]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,16]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"12":{"range":[[7,0],[8,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"13":{"range":[[10,0],[11,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":28,"snapshot":{"0":{"range":[[7,15],[7,15]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,16]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,15]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"19":{"range":[[7,0],[8,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"20":{"range":[[10,0],[11,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[7,15],[7,15]],"newRange":[[7,15],[7,16]],"oldText":"","newText":"y"}},{"type":"change","content":{"oldRange":[[7,16],[7,16]],"newRange":[[7,16],[7,17]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[7,17],[7,17]],"newRange":[[7,17],[7,18]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[7,18],[7,18]],"newRange":[[7,18],[7,19]],"oldText":"","newText":"o"}},{"type":"checkpoint","id":35,"snapshot":{"0":{"range":[[7,19],[7,19]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"19":{"range":[[7,0],[8,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"20":{"range":[[10,0],[11,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"21":{"range":[[7,15],[7,15]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"checkpoint","id":36,"snapshot":{"0":{"range":[[7,19],[7,19]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"21":{"range":[[7,15],[7,15]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"22":{"range":[[7,0],[8,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"23":{"range":[[10,0],[11,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[10,0],[10,12]],"newRange":[[10,0],[10,0]],"oldText":"            ","newText":""}},{"type":"checkpoint","id":37,"snapshot":{"0":{"range":[[7,19],[7,19]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"22":{"range":[[7,0],[8,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"23":{"range":[[10,0],[11,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":38,"snapshot":{"0":{"range":[[7,21],[7,21]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"25":{"range":[[7,0],[8,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"26":{"range":[[7,20],[7,21]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"27":{"range":[[7,13],[7,14]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[7,21],[7,21]],"newRange":[[7,21],[8,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[8,0],[8,0]],"newRange":[[8,0],[8,8]],"oldText":"","newText":"        "}},{"type":"checkpoint","id":41,"snapshot":{"0":{"range":[[8,8],[8,8]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"25":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":42,"snapshot":{"0":{"range":[[8,8],[8,8]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"25":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":43,"snapshot":{"0":{"range":[[8,8],[8,8]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"25":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":44,"snapshot":{"0":{"range":[[13,24],[13,25]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"28":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[13,24],[13,25]],"newRange":[[13,24],[13,25]],"oldText":"[","newText":"."}},{"type":"checkpoint","id":45,"snapshot":{"0":{"range":[[13,25],[13,25]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"28":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":46,"snapshot":{"0":{"range":[[13,25],[13,25]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"31":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"32":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[13,25],[13,25]],"newRange":[[13,25],[13,26]],"oldText":"","newText":"g"}},{"type":"change","content":{"oldRange":[[13,26],[13,26]],"newRange":[[13,26],[13,27]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[13,27],[13,27]],"newRange":[[13,27],[13,28]],"oldText":"","newText":"t"}},{"type":"checkpoint","id":51,"snapshot":{"0":{"range":[[13,28],[13,28]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"31":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"32":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":52,"snapshot":{"0":{"range":[[13,28],[13,28]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"31":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"32":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"33":{"range":[[13,25],[13,25]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"checkpoint","id":53,"snapshot":{"0":{"range":[[13,28],[13,28]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"31":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"32":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"33":{"range":[[13,25],[13,25]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"checkpoint","id":54,"snapshot":{"0":{"range":[[13,28],[13,28]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"31":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"32":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"33":{"range":[[13,25],[13,25]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[13,28],[13,28]],"newRange":[[13,28],[13,30]],"oldText":"","newText":"()"}},{"type":"checkpoint","id":55,"snapshot":{"0":{"range":[[13,30],[13,30]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"31":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"32":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"33":{"range":[[13,25],[13,25]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"checkpoint","id":56,"snapshot":{"0":{"range":[[13,30],[13,30]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"41":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"42":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"43":{"range":[[13,29],[13,30]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"44":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[13,29],[13,30]],"newRange":[[13,29],[13,29]],"oldText":")","newText":""}},{"type":"checkpoint","id":59,"snapshot":{"0":{"range":[[13,29],[13,29]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"41":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"42":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":60,"snapshot":{"0":{"range":[[13,46],[13,46]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"45":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"46":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[13,45],[13,46]],"newRange":[[13,45],[13,45]],"oldText":"]","newText":""}},{"type":"change","content":{"oldRange":[[13,45],[13,45]],"newRange":[[13,45],[13,46]],"oldText":"","newText":")"}},{"type":"checkpoint","id":65,"snapshot":{"0":{"range":[[13,46],[13,46]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"45":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"46":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":66,"snapshot":{"0":{"range":[[13,24],[13,29]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"53":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"54":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":67,"snapshot":{"0":{"range":[[13,24],[13,29]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"53":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"54":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":68,"snapshot":{"0":{"range":[[17,37],[17,38]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"53":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"54":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[17,37],[17,38]],"newRange":[[17,37],[17,42]],"oldText":"[","newText":".get("}},{"type":"checkpoint","id":71,"snapshot":{"0":{"range":[[17,42],[17,42]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"53":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"54":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"59":{"range":[[17,41],[17,42]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"60":{"range":[[22,20],[22,21]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"checkpoint","id":72,"snapshot":{"0":{"range":[[17,61],[17,62]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"63":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"64":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"65":{"range":[[17,0],[18,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[17,61],[17,62]],"newRange":[[17,61],[17,62]],"oldText":"]","newText":")"}},{"type":"checkpoint","id":73,"snapshot":{"0":{"range":[[17,62],[17,62]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"63":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"64":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"65":{"range":[[17,0],[18,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"66":{"range":[[17,61],[17,62]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"67":{"range":[[17,41],[17,42]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"checkpoint","id":74,"snapshot":{"0":{"range":[[17,62],[17,62]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"68":{"range":[[17,61],[17,62]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"69":{"range":[[17,41],[17,42]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"70":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"71":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"72":{"range":[[17,0],[18,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[8,0],[8,8]],"newRange":[[8,0],[8,0]],"oldText":"        ","newText":""}},{"type":"checkpoint","id":75,"snapshot":{"0":{"range":[[17,62],[17,62]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"70":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"71":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"72":{"range":[[17,0],[18,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"73":{"range":[[17,61],[17,62]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"74":{"range":[[17,41],[17,42]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"checkpoint","id":76,"snapshot":{"0":{"range":[[17,61],[17,61]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"75":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"76":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"77":{"range":[[17,0],[18,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"78":{"range":[[17,61],[17,62]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"79":{"range":[[17,41],[17,42]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[17,61],[17,61]],"newRange":[[17,61],[17,62]],"oldText":"","newText":","}},{"type":"change","content":{"oldRange":[[17,62],[17,62]],"newRange":[[17,62],[17,63]],"oldText":"","newText":" "}},{"type":"checkpoint","id":79,"snapshot":{"0":{"range":[[17,63],[17,63]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"75":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"76":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"77":{"range":[[17,0],[18,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":80,"snapshot":{"0":{"range":[[17,63],[17,63]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"86":{"range":[[17,63],[17,64]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"87":{"range":[[17,41],[17,42]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"88":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"89":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"90":{"range":[[17,0],[18,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[17,63],[17,63]],"newRange":[[17,63],[17,71]],"oldText":"","newText":"default="}},{"type":"checkpoint","id":83,"snapshot":{"0":{"range":[[17,71],[17,71]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"88":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"89":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"90":{"range":[[17,0],[18,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"93":{"range":[[17,71],[17,72]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"94":{"range":[[17,41],[17,42]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"checkpoint","id":84,"snapshot":{"0":{"range":[[17,32],[17,42]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"95":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"96":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"97":{"range":[[17,0],[18,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":85,"snapshot":{"0":{"range":[[17,32],[17,42]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"95":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"96":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"97":{"range":[[17,0],[18,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":86,"snapshot":{"0":{"range":[[17,71],[17,71]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"95":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"96":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"97":{"range":[[17,0],[18,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"98":{"range":[[17,71],[17,72]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"99":{"range":[[17,41],[17,42]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[17,71],[17,71]],"newRange":[[17,71],[17,81]],"oldText":"","newText":"error.get("}},{"type":"checkpoint","id":89,"snapshot":{"0":{"range":[[17,81],[17,81]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"95":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"96":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"97":{"range":[[17,0],[18,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"102":{"range":[[17,80],[17,81]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"103":{"range":[[17,81],[17,82]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"checkpoint","id":90,"snapshot":{"0":{"range":[[17,81],[17,81]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"104":{"range":[[17,80],[17,81]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"105":{"range":[[17,81],[17,82]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"106":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"107":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"108":{"range":[[17,0],[18,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[17,81],[17,81]],"newRange":[[17,81],[17,82]],"oldText":"","newText":")"}},{"type":"checkpoint","id":91,"snapshot":{"0":{"range":[[17,82],[17,82]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"106":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"107":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"108":{"range":[[17,0],[18,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":92,"snapshot":{"0":{"range":[[17,81],[17,81]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"115":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"116":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"117":{"range":[[17,0],[18,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"118":{"range":[[17,80],[17,81]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"119":{"range":[[17,81],[17,82]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"checkpoint","id":93,"snapshot":{"0":{"range":[[17,81],[17,81]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"115":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"116":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"117":{"range":[[17,0],[18,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"118":{"range":[[17,80],[17,81]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"119":{"range":[[17,81],[17,82]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"checkpoint","id":94,"snapshot":{"0":{"range":[[17,81],[17,81]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"115":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"116":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"117":{"range":[[17,0],[18,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"118":{"range":[[17,80],[17,81]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"119":{"range":[[17,81],[17,82]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[17,81],[17,81]],"newRange":[[17,81],[17,83]],"oldText":"","newText":"''"}},{"type":"checkpoint","id":95,"snapshot":{"0":{"range":[[17,83],[17,83]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"115":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"116":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"117":{"range":[[17,0],[18,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":96,"snapshot":{"0":{"range":[[17,82],[17,82]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"115":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"116":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"117":{"range":[[17,0],[18,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"124":{"range":[[17,81],[17,82]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[17,82],[17,82]],"newRange":[[17,82],[17,83]],"oldText":"","newText":"m"}},{"type":"change","content":{"oldRange":[[17,83],[17,83]],"newRange":[[17,83],[17,84]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[17,84],[17,84]],"newRange":[[17,84],[17,85]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[17,85],[17,85]],"newRange":[[17,85],[17,86]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[17,86],[17,86]],"newRange":[[17,86],[17,87]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[17,87],[17,87]],"newRange":[[17,87],[17,88]],"oldText":"","newText":"g"}},{"type":"change","content":{"oldRange":[[17,88],[17,88]],"newRange":[[17,88],[17,89]],"oldText":"","newText":"e"}},{"type":"checkpoint","id":109,"snapshot":{"0":{"range":[[17,89],[17,89]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"115":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"116":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"117":{"range":[[17,0],[18,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"124":{"range":[[17,81],[17,89]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"125":{"range":[[17,82],[17,82]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"checkpoint","id":110,"snapshot":{"0":{"range":[[17,42],[17,42]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"124":{"range":[[17,81],[17,89]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"126":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"127":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"128":{"range":[[17,0],[18,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"129":{"range":[[17,41],[17,42]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"130":{"range":[[17,91],[17,92]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"checkpoint","id":111,"snapshot":{"0":{"range":[[17,42],[17,42]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"124":{"range":[[17,81],[17,89]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"126":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"127":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"128":{"range":[[17,0],[18,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"129":{"range":[[17,41],[17,42]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"130":{"range":[[17,91],[17,92]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"checkpoint","id":112,"snapshot":{"0":{"range":[[7,15],[7,15]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,13],[7,20]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,14],[7,19]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[13,28],[13,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"124":{"range":[[17,81],[17,89]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"126":{"range":[[7,0],[9,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"127":{"range":[[13,0],[14,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"128":{"range":[[17,0],[18,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[7,0],[8,0]],"newRange":[[7,0],[7,0]],"oldText":"        print('yolo')\n","newText":""}},{"type":"change","content":{"oldRange":[[7,0],[8,0]],"newRange":[[7,0],[7,0]],"oldText":"\n","newText":""}},{"type":"checkpoint","id":119,"snapshot":{"0":{"range":[[7,0],[7,0]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null,"autoscroll":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,0],[7,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,0],[7,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[11,28],[11,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"124":{"range":[[15,81],[15,89]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"126":{"range":[[7,0],[7,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"127":{"range":[[11,0],[12,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"128":{"range":[[15,0],[16,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":120,"snapshot":{"0":{"range":[[7,0],[7,0]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null,"autoscroll":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,0],[7,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,0],[7,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[11,28],[11,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"124":{"range":[[15,81],[15,89]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"131":{"range":[[11,0],[12,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"132":{"range":[[15,0],[16,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":121,"snapshot":{"0":{"range":[[7,0],[7,0]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null,"autoscroll":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,0],[7,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,0],[7,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[11,28],[11,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"124":{"range":[[15,81],[15,89]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"131":{"range":[[11,0],[12,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"132":{"range":[[15,0],[16,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":122,"snapshot":{"0":{"range":[[7,0],[7,0]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null,"autoscroll":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,0],[7,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,0],[7,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[11,28],[11,29]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"124":{"range":[[15,81],[15,89]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"131":{"range":[[11,0],[12,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"132":{"range":[[15,0],[16,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[11,0],[11,0]],"newRange":[[11,0],[12,0]],"oldText":"","newText":"                if error['exception_name'] == 'InvalidGenericIDException':\n"}},{"type":"change","content":{"oldRange":[[12,0],[13,0]],"newRange":[[12,0],[12,0]],"oldText":"                if error.get('exception_name') == 'InvalidGenericIDException':\n","newText":""}},{"type":"change","content":{"oldRange":[[15,0],[15,0]],"newRange":[[15,0],[16,0]],"oldText":"","newText":"                        message=error['exception_message'],\n"}},{"type":"change","content":{"oldRange":[[16,0],[17,0]],"newRange":[[16,0],[16,0]],"oldText":"                        message=error.get('exception_message', default=error.get('message')),\n","newText":""}},{"type":"checkpoint","id":123,"snapshot":{"0":{"range":[[7,0],[7,0]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null,"autoscroll":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,0],[7,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,0],[7,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[12,0],[12,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"124":{"range":[[16,0],[16,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"131":{"range":[[11,0],[12,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"132":{"range":[[15,0],[16,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":124,"snapshot":{"0":{"range":[[7,0],[7,0]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null,"autoscroll":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,0],[7,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,0],[7,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[12,0],[12,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"124":{"range":[[16,0],[16,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"131":{"range":[[11,0],[12,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"132":{"range":[[15,0],[16,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[11,0],[11,0]],"newRange":[[11,0],[12,0]],"oldText":"","newText":"                if error.get('exception_name') == 'InvalidGenericIDException':\n"}},{"type":"change","content":{"oldRange":[[12,0],[13,0]],"newRange":[[12,0],[12,0]],"oldText":"                if error['exception_name'] == 'InvalidGenericIDException':\n","newText":""}},{"type":"change","content":{"oldRange":[[15,0],[15,0]],"newRange":[[15,0],[16,0]],"oldText":"","newText":"                        message=error.get('exception_message', default=error.get('message')),\n"}},{"type":"change","content":{"oldRange":[[16,0],[17,0]],"newRange":[[16,0],[16,0]],"oldText":"                        message=error['exception_message'],\n","newText":""}},{"type":"checkpoint","id":125,"snapshot":{"0":{"range":[[7,0],[7,0]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null,"autoscroll":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,0],[7,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,0],[7,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[12,0],[12,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"124":{"range":[[16,0],[16,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"131":{"range":[[11,0],[12,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"132":{"range":[[15,0],[16,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":126,"snapshot":{"0":{"range":[[15,63],[15,71]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null,"autoscroll":true},"reversed":true,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,0],[7,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,0],[7,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[12,0],[12,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"124":{"range":[[16,0],[16,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[15,63],[15,71]],"newRange":[[15,63],[15,63]],"oldText":"default=","newText":""}},{"type":"checkpoint","id":129,"snapshot":{"0":{"range":[[15,63],[15,63]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null,"autoscroll":true},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,0],[7,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,0],[7,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[12,0],[12,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"124":{"range":[[16,0],[16,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true}}},{"type":"checkpoint","id":130,"snapshot":{"0":{"range":[[15,63],[15,63]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null,"autoscroll":true},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,0],[7,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,0],[7,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[12,0],[12,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"124":{"range":[[16,0],[16,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"133":{"range":[[15,0],[16,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":131,"snapshot":{"0":{"range":[[15,63],[15,63]],"properties":{"type":"selection","editorId":181,"goalScreenRange":null,"autoscroll":true},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"11":{"range":[[7,0],[7,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"18":{"range":[[7,0],[7,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"40":{"range":[[12,0],[12,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"124":{"range":[[16,0],[16,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"133":{"range":[[15,0],[16,0]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}}],"redoStack":[]},"encoding":"utf8","filePath":"/home/nico/projects/bnp-serious-game-api/utils/src/handle_http_error.py","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"edd2b765500a4d27c2be46955af3524358e5a30b","deserializer":"TextBuffer","version":2}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":8,"items":[{"id":19,"softTabs":true,"displayBuffer":{"id":20,"softWrapped":true,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/nico/projects/bnp-serious-game-api/docker-compose.yml","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":27,"softTabs":true,"displayBuffer":{"id":28,"softWrapped":true,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/nico/projects/bnp-serious-game-api/src/utils/merge_liquidation.py","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":67,"softTabs":true,"displayBuffer":{"id":68,"softWrapped":true,"scrollTop":1550,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/nico/projects/bnp-serious-game-api/src/routes/admin.py","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":141,"softTabs":true,"displayBuffer":{"id":142,"softWrapped":true,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/nico/projects/bnp-serious-game-api/utils/src/clients/authenticator.py","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":145,"softTabs":true,"displayBuffer":{"id":146,"softWrapped":true,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/nico/projects/bnp-serious-game-api/utils/src/decorators/required_admin.py","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":149,"softTabs":true,"displayBuffer":{"id":150,"softWrapped":true,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/nico/projects/bnp-serious-game-api/utils/src/decorators/required_authentication.py","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":103,"softTabs":true,"displayBuffer":{"id":104,"softWrapped":true,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/nico/projects/bnp-serious-game-api/src/utils/game.py","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":111,"softTabs":true,"displayBuffer":{"id":112,"softWrapped":true,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/nico/projects/bnp-serious-game-api/test/resources/test_game.py","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":119,"softTabs":true,"displayBuffer":{"id":120,"softWrapped":true,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/nico/projects/bnp-serious-game-api/test/resources/test_portfolio.py","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":99,"softTabs":true,"displayBuffer":{"id":100,"softWrapped":true,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/nico/projects/bnp-serious-game-api/src/routes/game.py","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":95,"softTabs":true,"displayBuffer":{"id":96,"softWrapped":true,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/nico/projects/bnp-serious-game-api/circle.yml","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":91,"softTabs":true,"displayBuffer":{"id":92,"softWrapped":true,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/nico/projects/bnp-serious-game-api/requirements.txt","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":63,"softTabs":true,"displayBuffer":{"id":64,"softWrapped":true,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/nico/projects/bnp-serious-game-api/src/models/portfolioRevision.py","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":59,"softTabs":true,"displayBuffer":{"id":60,"softWrapped":true,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/nico/projects/bnp-serious-game-api/src/config.py","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":55,"softTabs":true,"displayBuffer":{"id":56,"softWrapped":true,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/nico/projects/bnp-serious-game-api/src/cron/daily/updater.py","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":23,"softTabs":true,"displayBuffer":{"id":24,"softWrapped":true,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/nico/projects/bnp-serious-game-api/test/utils/test_merge_liquidation.py","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":31,"softTabs":true,"displayBuffer":{"id":32,"softWrapped":true,"scrollTop":1715,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/nico/projects/bnp-serious-game-api/utils/src/clients/flux.py","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":177,"softTabs":true,"displayBuffer":{"id":178,"softWrapped":true,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/nico/projects/bnp-serious-game-api/utils/src/decorators/catch_exceptions.py","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":181,"softTabs":true,"displayBuffer":{"id":182,"softWrapped":true,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/nico/projects/bnp-serious-game-api/utils/src/handle_http_error.py","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/home/nico/projects/bnp-serious-game-api/utils/src/handle_http_error.py","focused":true,"flexScale":1,"deserializer":"Pane"},"activePaneId":8,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-yaml","language-python","language-text","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/home/nico/projects/bnp-serious-game-api/docker-compose.yml":1435580180860,"/home/nico/projects/bnp-serious-game-api/src/utils/merge_liquidation.py":1435583584999,"/home/nico/projects/bnp-serious-game-api/src/routes/admin.py":1435655264945,"/home/nico/projects/bnp-serious-game-api/utils/src/clients/authenticator.py":1435649123773,"/home/nico/projects/bnp-serious-game-api/utils/src/decorators/required_admin.py":1435649138147,"/home/nico/projects/bnp-serious-game-api/utils/src/decorators/required_authentication.py":1435649146571,"/home/nico/projects/bnp-serious-game-api/src/utils/game.py":1435589021479,"/home/nico/projects/bnp-serious-game-api/test/resources/test_game.py":1435589259962,"/home/nico/projects/bnp-serious-game-api/test/resources/test_portfolio.py":1435649441749,"/home/nico/projects/bnp-serious-game-api/src/routes/game.py":1435587732027,"/home/nico/projects/bnp-serious-game-api/circle.yml":1435587567825,"/home/nico/projects/bnp-serious-game-api/requirements.txt":1435587008924,"/home/nico/projects/bnp-serious-game-api/src/models/portfolioRevision.py":1435580380595,"/home/nico/projects/bnp-serious-game-api/src/config.py":1435588904962,"/home/nico/projects/bnp-serious-game-api/src/cron/daily/updater.py":1435581313538,"/home/nico/projects/bnp-serious-game-api/test/utils/test_merge_liquidation.py":1435649432442,"/home/nico/projects/bnp-serious-game-api/utils/src/clients/flux.py":1435655338281,"/home/nico/projects/bnp-serious-game-api/utils/src/decorators/catch_exceptions.py":1435655368194,"/home/nico/projects/bnp-serious-game-api/utils/src/handle_http_error.py":1435655372298},"metrics":{"sessionLength":2624061},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/home/nico/projects/bnp-serious-game-api":{"isExpanded":true,"entries":{".git":{"isExpanded":false,"entries":{}},"devops":{"isExpanded":false,"entries":{}},"migrations":{"isExpanded":false,"entries":{}},"src":{"isExpanded":true,"entries":{"__pycache__":{"isExpanded":false,"entries":{}},"cron":{"isExpanded":true,"entries":{"__pycache__":{"isExpanded":false,"entries":{}},"daily":{"isExpanded":true,"entries":{"__pycache__":{"isExpanded":false,"entries":{}}}}}},"models":{"isExpanded":true,"entries":{"__pycache__":{"isExpanded":false,"entries":{}}}},"repositories":{"isExpanded":false,"entries":{}},"resources":{"isExpanded":false,"entries":{}},"routes":{"isExpanded":true,"entries":{"__pycache__":{"isExpanded":false,"entries":{}}}},"utils":{"isExpanded":true,"entries":{"__pycache__":{"isExpanded":false,"entries":{}}}}}},"test":{"isExpanded":true,"entries":{"__pycache__":{"isExpanded":false,"entries":{}},"cron":{"isExpanded":false,"entries":{}},"fixtures":{"isExpanded":false,"entries":{}},"repositories":{"isExpanded":false,"entries":{}},"resources":{"isExpanded":true,"entries":{"__pycache__":{"isExpanded":false,"entries":{}}}},"utils":{"isExpanded":true,"entries":{"__pycache__":{"isExpanded":false,"entries":{}}}}}},"utils":{"isExpanded":true,"entries":{"devops":{"isExpanded":false,"entries":{}},"src":{"isExpanded":true,"entries":{"__pycache__":{"isExpanded":false,"entries":{}},"clients":{"isExpanded":true,"entries":{"__pycache__":{"isExpanded":false,"entries":{}}}},"common":{"isExpanded":false,"entries":{}},"decorators":{"isExpanded":true,"entries":{"__pycache__":{"isExpanded":false,"entries":{}}}}}},"test":{"isExpanded":false,"entries":{}}}},"venv":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/home/nico/projects/bnp-serious-game-api/utils/src/handle_http_error.py","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":244},"find-and-replace":{"viewState":"","modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false,"wholeWord":false},"projectViewState":"","resultsModelState":{"useRegex":false,"caseSensitive":false},"findHistory":["query"],"replaceHistory":[],"pathsHistory":[]},"keybinding-resolver":{}}}